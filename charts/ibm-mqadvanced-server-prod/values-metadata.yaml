license:
  __metadata:
    label: "License"
    type: "string"
    required: true
    options:
    - label: "Accepted"
      value: "accept"
    - label: "Not accepted"
      value: "not accepted"

image:
  __metadata:
    label: "Image"
  repository:
    __metadata:
      label: "Image repository"
      description: "Docker image location"
      type: "string"
      immutable: false
      required: true
  tag:
    __metadata:
      label: "Image tag"
      description: "Docker image tag"
      type: "string"
      immutable: false
      required: true
  pullPolicy:
    __metadata:
      name: "pullPolicy"
      label: "Image pull policy"
      description: "Always, Never, or IfNotPresent. Defaults to Always"
      type: "string"
      immutable: false
      required: true
      options:
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
      - label: "IfNotPresent"
        value: "IfNotPresent" 
  pullSecret:
    __metadata:
      label: "Image pull secret"
      description: "Secret to use when pulling the image.  Set this when using an image from a private registry"
      type: "string"
      required: false

## global persistence parameters
persistence:
  __metadata:
    label: "Persistence"
  enabled:
    __metadata:
      label: "Enable persistence"
      description: "Whether or not to store MQ messages and configuration on a Persistent Volume"
      type: "boolean"
      required: true
  useDynamicProvisioning:
    __metadata:
      label: "Use dynamic provisioning"
      description: "Whether or not to use Storage Classes to provision a Persisent Volume automatically"
      type: "boolean"
      required: true

dataPVC:
  __metadata:
    label: "Data PVC"
  name:
    __metadata:
      label: "Name"
      description: "Name of Persistent Volume Claim, used for MQ objects and messages"
      type: "string"
      required: true
  storageClassName:
    __metadata:
      label: "Storage Class name"
      description: "Storage class of Persistent Volume Claim, used for MQ objects and messages"
      type: "string"
      required: false
  size:
    __metadata:
      label: "Size"
      description: "Size of Persistent Volume Claim, used for MQ objects and messages"
      type: "string"
      required: true

service:
  __metadata:
    label: "Service"
  name:
    __metadata:
      label: "Service name"
      description: "Service name"
      type: "string"
      required: true
  type:
    __metadata:
      label: "Service type"
      description: "Type of service"
      type: "string"
      required: true
      options:
      - label: "ClusterIP"
        value: "ClusterIP"
      - label: "NodePort"
        value: "NodePort"
      - label: "LoadBalancer"
        value: "LoadBalancer" 
      - label: "ExternalName"
        value: "ExternalName" 

resources:
  __metadata:
    label: "Resources"
  requests:
    cpu: 
      __metadata: 
        label: "CPU request"
        description: "The requested CPU"
        type: "string"
        required: true   
    memory: 
      __metadata: 
        label: "Memory request"
        description: "The requested memory"
        type: "string"
        required: true   
  limits:
    cpu: 
      __metadata: 
        label: "CPU limit"
        description: "The CPU limit"
        type: "string"
        required: true
    memory: 
      __metadata: 
        label: "Memory limit"
        description: "The memory limit"
        type: "string"
        required: true

queueManager:
  __metadata:
    label: "Queue manager"
  name:
    __metadata:
      label: "Queue manager name"
      description: "MQ queue manager name, which defaults to the Helm release name"
      type: "string"
      required: false

nameOverride:
  __metadata:
    label: "Name override"
    description: "This can be set to partially override the name of the resources created by this chart"
    type: "string"
    required: false

# livenessProbe section specifies setting for the MQ liveness probe, which checks for a running Queue Manager
livenessProbe:
  __metadata:
    label: "Liveness probe"
  # initialDelaySeconds should be raised if your system cannot start the Queue Manager in 60 seconds
  initialDelaySeconds:
    __metadata:
      label: "Initial delay (seconds)"
      description: "How long to wait before starting the probe.  Raise this delay if your system cannot start the Queue Manager in the default time period"
      type: "number"
      required: false
  periodSeconds:
    __metadata:
      label: "Period (seconds)"
      description: "How often to perform the probe"
      type: "number"
      required: false
  timeoutSeconds:
    __metadata:
      label: "Timeout (seconds)"
      description: "How long before a probe times out"
      type: "number"
      required: false
  failureThreshold:
    __metadata:
      label: "Failure threshold"
      description: "Number of times the probe can fail before taking action"
      type: "number"
      required: false

# readinessProbe section specifies setting for the MQ readiness probe, which checks when the MQ listener is running
readinessProbe:
  __metadata:
    label: "Readiness probe"
  initialDelaySeconds:
    __metadata:
      label: "Initial delay (seconds)"
      description: "How long to wait before starting the probe"
      type: "number"
      required: false
  periodSeconds:
    __metadata:
      label: "Period (seconds)"
      description: "How often to perform the probe"
      type: "number"
      required: false
  timeoutSeconds:
    __metadata:
      label: "Timeout (seconds)"
      description: "How long before a probe times out"
      type: "number"
      required: false
  failureThreshold:
    __metadata:
      label: "Failure threshold"
      description: "Number of times the probe can fail before taking action"
      type: "number"
      required: false
